##########################################################################
#
# Processor specific code

# CPU = "Z80"
# Description = "Zilog 8-bit microprocessor."
# DataWidth = 8  # 8-bit data
# AddressWidth = 16  # 16-bit addresses

# Maximum length of an instruction (for formatting purposes)
maxLength = 3

# Leadin bytes for multibyte instructions
leadInBytes = [0xcb, 0xdd, 0xed, 0xfd]

# Addressing mode table
# List of addressing modes and corresponding format strings for operands.
addressModeTable = {
"implied"    : "",
"a"          : "a",
"b"          : "b",
"c"          : "c",
"d"          : "d",
"e"          : "e",
"h"          : "h",
"l"          : "l",
"m"          : "m",
"nc"         : "nc",
"p"          : "p",
"z"          : "z",
"nz"         : "nz",
"pe"         : "pe",
"po"         : "po",
"sp"         : "sp",
"bc"         : "bc",
"de"         : "de",
"hl"         : "hl",
"af"         : "af",
"a,a"        : "a,a",
"a,b"        : "a,b",
"a,c"        : "a,c",
"a,d"        : "a,d",
"a,e"        : "a,e",
"a,h"        : "a,h",
"a,l"        : "a,l",
"b,a"        : "b,a",
"b,b"        : "b,b",
"b,c"        : "b,c",
"b,d"        : "b,d",
"b,e"        : "b,e",
"b,h"        : "b,h",
"b,l"        : "b,l",
"c,l"        : "c,l",
"c,a"        : "c,a",
"c,b"        : "c,b",
"c,c"        : "c,c",
"c,d"        : "c,d",
"c,e"        : "c,e",
"c,h"        : "c,h",
"d,a"        : "d,a",
"d,b"        : "d,b",
"d,c"        : "d,c",
"d,d"        : "d,d",
"d,e"        : "d,e",
"d,h"        : "d,h",
"d,l"        : "d,l",
"e,a"        : "e,a",
"e,b"        : "e,b",
"e,c"        : "e,c",
"e,d"        : "e,d",
"e,e"        : "e,e",
"e,h"        : "e,h",
"e,l"        : "e,l",
"h,a"        : "h,a",
"h,b"        : "h,b",
"h,c"        : "h,c",
"h,d"        : "h,d",
"h,e"        : "h,e",
"h,h"        : "h,h",
"h,l"        : "h,l",
"l,b"        : "l,b",
"l,a"        : "l,a",
"l,c"        : "l,c",
"l,d"        : "l,d",
"l,e"        : "l,e",
"l,h"        : "l,h",
"l,l"        : "l,l",
"af,af"      : "af,af",
"hl,bc"      : "hl,bc",
"hl,de"      : "hl,bc",
"hl,hl"      : "hl,hl",
"hl,sp"      : "hl,sp",
"sp,hl"      : "sp,hl",
"de,hl"      : "de,hl",
"ix,bc"      : "ix,bc",
"iy,bc"      : "iy,bc",
"bc,nn"      : "bc,${1:02X}{0:02X}",
"de,nn"      : "de,${1:02X}{0:02X}",
"hl,nn"      : "hl,${1:02X}{0:02X}",
"sp,nn"      : "sp,${1:02X}{0:02X}",
"c,nn"       : "c,${1:02X}{0:02X}",
"m,nn"       : "m,${1:02X}{0:02X}",
"indnn,hl"   : "(${1:02X}{0:02X}),hl",
"indn,a"     : "(${0:02X}),a",
"indhl,n"    : "(hl),(${0:02X})",
"a,indnn"    : "a,(${1:02X}{0:02X})",
"a,indn"     : "a,(${0:02X})",
"indnn,a"    : "(${1:02X}{0:02X}),a",
"hl,indnn"   : "hl,(${1:02X}{0:02X})",
"indbc,a"    : "(bc),a",
"indde,a"    : "(de),a",
"indhl"      : "(hl)",
"indhl,a"    : "(hl),a",
"indhl,b"    : "(hl),b",
"indhl,c"    : "(hl),c",
"indhl,d"    : "(hl),d",
"indhl,e"    : "(hl),e",
"indhl,h"    : "(hl),h",
"indhl,l"    : "(hl),l",
"indsp,hl"   : "(sp),hl",
"a,indde"    : "a,(de)",
"a,indbc"    : "a,(bc)",
"b,indhl"    : "b,(hl)",
"a,indhl"    : "a,(hl)",
"c,indhl"    : "c,(hl)",
"d,indhl"    : "d,(hl)",
"e,indhl"    : "e,(hl)",
"h,indhl"    : "h,(hl)",
"l,indhl"    : "l,(hl)",
"n"          : "${0:02X}",
"a,n"        : "a,${0:02X}",
"b,n"        : "b,${0:02X}",
"c,n"        : "b,${0:02X}",
"d,n"        : "d,${0:02X}",
"e,n"        : "e,${0:02X}",
"h,n"        : "h,${0:02X}",
"l,n"        : "l,${0:02X}",
"nz,n"       : "nz,${0:04X}",
"z,n"        : "z,${0:04X}",
"z,nn"       : "z,${1:02X}{0:02X}",
"nz,nn"      : "nz,${1:02X}{0:02X}",
"nc,n"       : "nc,${0:04X}",
"nc,nn"      : "nc,${1:02X}{0:02X}",
"pe,nn"      : "pe,${1:02X}{0:02X}",
"po,nn"      : "po,${1:02X}{0:02X}",
"p,nn"       : "p,${1:02X}{0:02X}",
"c,n"        : "c,${0:04X}",
"nn"         : "${1:02X}{0:02X}",
"00"         : "$00",
"08"         : "$08",
"10"         : "$10",
"18"         : "$18",
"20"         : "$20",
"28"         : "$28",
"30"         : "$10",
"38"         : "$18",
"0,b"        : "0,b",
"0,c"        : "0,c",
"0,d"        : "0,d",
"7,a"        : "7,a",
"b,indc"     : "b,(c)",
}


# Op Code Table
# Key is numeric opcode (possibly multiple bytes)
# Value is a list:
#   # bytes
#   mnemonic
#   addressing mode
#   flags (e.g. pcr)
opcodeTable = {

0x00 : [ 1, "nop",  "implied"    ],
0x01 : [ 3, "ld",   "bc,nn"      ],
0x02 : [ 1, "ld",   "indbc,a"    ],
0x03 : [ 1, "inc",  "bc"         ],
0x04 : [ 1, "inc",  "b"          ],
0x05 : [ 1, "dec",  "b"          ],
0x06 : [ 2, "ld",   "b,n"        ],
0x07 : [ 1, "rlca", "implied"    ],
0x08 : [ 1, "ex",   "af,af"      ],
0x09 : [ 1, "add",  "hl,bc"      ],
0x0a : [ 1, "ld",   "a,indbc"    ],
0x0b : [ 1, "dec",  "bc"         ],
0x0c : [ 1, "inc",  "c"          ],
0x0d : [ 1, "dec",  "c"          ],
0x0e : [ 2, "ld",   "c,n"        ],
0x0f : [ 1, "rrca", "implied"    ],

0x10 : [ 2, "djnz", "n", pcr     ],
0x11 : [ 3, "ld",   "de,nn"      ],
0x12 : [ 1, "ld",   "indde,a"    ],
0x13 : [ 1, "inc",  "de"         ],
0x14 : [ 1, "inc",  "d"          ],
0x15 : [ 1, "dec",  "d"          ],
0x16 : [ 2, "ld",   "d,n"        ],
0x17 : [ 1, "rla",  "implied"    ],
0x18 : [ 2, "jr",   "n", pcr     ],
0x19 : [ 1, "add",  "hl,de"      ],
0x1a : [ 1, "ld",   "a,indde"    ],
0x1b : [ 1, "dec",  "de"         ],
0x1c : [ 1, "inc",  "e"          ],
0x1d : [ 1, "dec",  "e"          ],
0x1e : [ 2, "ld",   "e,n"        ],
0x1f : [ 1, "rra",  "implied"    ],

0x20 : [ 2, "jr",   "nz,n"       ],
0x21 : [ 3, "ld",   "hl,nn"      ],
0x22 : [ 3, "ld",   "indnn,hl"   ],
0x23 : [ 1, "inc",  "hl"         ],
0x24 : [ 1, "inc",  "h"          ],
0x25 : [ 1, "dec",  "h"          ],
0x26 : [ 2, "ld",   "h,n"        ],
0x27 : [ 1, "daa",  "implied"    ],
0x28 : [ 2, "jr",   "z,n", pcr   ],
0x29 : [ 1, "add",  "hl,hl"      ],
0x2a : [ 3, "ld",   "hl,indnn"   ],
0x2b : [ 1, "dec",  "hl"         ],
0x2c : [ 1, "inc",  "l"          ],
0x2d : [ 1, "dec",  "l"          ],
0x2e : [ 2, "ld",   "l,n"        ],
0x2f : [ 1, "cpl",  "implied"    ],

0x30 : [ 2, "jr",   "nc,n", pcr  ],
0x31 : [ 3, "ld",   "sp,nn"      ],
0x32 : [ 3, "ld",   "indnn,a"    ],
0x33 : [ 1, "inc",  "sp"         ],
0x34 : [ 1, "inc",  "indhl"      ],
0x35 : [ 1, "dec",  "indhl"      ],
0x36 : [ 2, "ld",   "indhl,n"    ],
0x37 : [ 1, "scf",  "implied"    ],
0x38 : [ 2, "jr",   "c,n", pcr   ],
0x39 : [ 1, "add",  "hl,sp"      ],
0x3a : [ 3, "ld",   "a,indnn"    ],
0x3b : [ 1, "dec",  "sp"         ],
0x3c : [ 1, "inc",  "a"          ],
0x3d : [ 1, "dec",  "a"          ],
0x3e : [ 2, "ld",   "a,n"        ],
0x3f : [ 1, "ccf",  "implied"    ],

0x40 : [ 1, "ld",   "b,b"        ],
0x41 : [ 1, "ld",   "b,c"        ],
0x42 : [ 1, "ld",   "b,d"        ],
0x43 : [ 1, "ld",   "b,e"        ],
0x44 : [ 1, "ld",   "b,h"        ],
0x45 : [ 1, "ld",   "b,l"        ],
0x46 : [ 1, "ld",   "b,indhl"    ],
0x47 : [ 1, "ld",   "b,a"        ],
0x48 : [ 1, "ld",   "c,b"        ],
0x49 : [ 1, "ld",   "c,c"        ],
0x4a : [ 1, "ld",   "c,d"        ],
0x4b : [ 1, "ld",   "c,e"        ],
0x4c : [ 1, "ld",   "c,h"        ],
0x4d : [ 1, "ld",   "c,l"        ],
0x4e : [ 1, "ld",   "c,indhl"    ],
0x4f : [ 1, "ld",   "c,a"        ],

0x50 : [ 1, "ld",   "d,b"        ],
0x51 : [ 1, "ld",   "d,c"        ],
0x52 : [ 1, "ld",   "d,d"        ],
0x53 : [ 1, "ld",   "d,e"        ],
0x54 : [ 1, "ld",   "d,h"        ],
0x55 : [ 1, "ld",   "d,l"        ],
0x56 : [ 1, "ld",   "d,indhl"    ],
0x57 : [ 1, "ld",   "d,a"        ],
0x58 : [ 1, "ld",   "e,b"        ],
0x59 : [ 1, "ld",   "e,c"        ],
0x5a : [ 1, "ld",   "e,d"        ],
0x5b : [ 1, "ld",   "e,e"        ],
0x5c : [ 1, "ld",   "e,h"        ],
0x5d : [ 1, "ld",   "e,l"        ],
0x5e : [ 1, "ld",   "e,indhl"    ],
0x5f : [ 1, "ld",   "e,a"        ],

0x60 : [ 1, "ld",   "h,b"        ],
0x61 : [ 1, "ld",   "h,c"        ],
0x62 : [ 1, "ld",   "h,d"        ],
0x63 : [ 1, "ld",   "h,e"        ],
0x64 : [ 1, "ld",   "h,h"        ],
0x65 : [ 1, "ld",   "h,l"        ],
0x66 : [ 1, "ld",   "h,indhl"    ],
0x67 : [ 1, "ld",   "h,a"        ],
0x68 : [ 1, "ld",   "l,b"        ],
0x69 : [ 1, "ld",   "l,c"        ],
0x6a : [ 1, "ld",   "l,d"        ],
0x6b : [ 1, "ld",   "l,e"        ],
0x6c : [ 1, "ld",   "l,h"        ],
0x6d : [ 1, "ld",   "l,l"        ],
0x6e : [ 1, "ld",   "l,indhl"    ],
0x6f : [ 1, "ld",   "l,a"        ],

0x70 : [ 1, "ld",   "indhl,b"    ],
0x71 : [ 1, "ld",   "indhl,c"    ],
0x72 : [ 1, "ld",   "indhl,d"    ],
0x73 : [ 1, "ld",   "indhl,e"    ],
0x74 : [ 1, "ld",   "indhl,h"    ],
0x75 : [ 1, "ld",   "indhl,l"    ],
0x76 : [ 1, "halt", "implied"    ],
0x77 : [ 1, "ld",   "indhl,a"    ],
0x78 : [ 1, "ld",   "a,b"        ],
0x79 : [ 1, "ld",   "a,c"        ],
0x7a : [ 1, "ld",   "a,d"        ],
0x7b : [ 1, "ld",   "a,e"        ],
0x7c : [ 1, "ld",   "a,h"        ],
0x7d : [ 1, "ld",   "a,l"        ],
0x7e : [ 1, "ld",   "a,indhl"    ],
0x7f : [ 1, "ld",   "a,a"        ],

0x80 : [ 1, "add",  "a,b"        ],
0x81 : [ 1, "add",  "a,c"        ],
0x82 : [ 1, "add",  "a,d"        ],
0x83 : [ 1, "add",  "a,e"        ],
0x84 : [ 1, "add",  "a,h"        ],
0x85 : [ 1, "add",  "a,l"        ],
0x86 : [ 1, "add",  "a,indhl"    ],
0x87 : [ 1, "add",  "a,a"        ],
0x88 : [ 1, "adc",  "a,b"        ],
0x89 : [ 1, "adc",  "a,c"        ],
0x8a : [ 1, "adc",  "a,d"        ],
0x8b : [ 1, "adc",  "a,e"        ],
0x8c : [ 1, "adc",  "a,h"        ],
0x8d : [ 1, "adc",  "a,l"        ],
0x8e : [ 1, "adc",  "a,indhl"    ],
0x8f : [ 1, "adc",  "a,a"        ],

0x90 : [ 1, "sub",  "b"          ],
0x91 : [ 1, "sub",  "c"          ],
0x92 : [ 1, "sub",  "d"          ],
0x93 : [ 1, "sub",  "e"          ],
0x94 : [ 1, "sub",  "h"          ],
0x95 : [ 1, "sub",  "l"          ],
0x96 : [ 1, "sub",  "indhl"      ],
0x97 : [ 1, "sub",  "a"          ],
0x98 : [ 1, "sbc",  "a,b"        ],
0x99 : [ 1, "sbc",  "a,c"        ],
0x9a : [ 1, "sbc",  "a,d"        ],
0x9b : [ 1, "sbc",  "a,e"        ],
0x9c : [ 1, "sbc",  "a,h"        ],
0x9d : [ 1, "sbc",  "a,l"        ],
0x9e : [ 1, "sbc",  "a,indhl"    ],
0x9f : [ 1, "sbc",  "a,a"        ],

0xa0 : [ 1, "and",  "b"          ],
0xa1 : [ 1, "and",  "c"          ],
0xa2 : [ 1, "and",  "d"          ],
0xa3 : [ 1, "and",  "e"          ],
0xa4 : [ 1, "and",  "h"          ],
0xa5 : [ 1, "and",  "l"          ],
0xa6 : [ 1, "and",  "indhl"      ],
0xa7 : [ 1, "and",  "a"          ],
0xa8 : [ 1, "xor",  "b"          ],
0xa9 : [ 1, "xor",  "c"          ],
0xaa : [ 1, "xor",  "d"          ],
0xab : [ 1, "xor",  "e"          ],
0xac : [ 1, "xor",  "h"          ],
0xad : [ 1, "xor",  "l"          ],
0xae : [ 1, "xor",  "indhl"      ],
0xaf : [ 1, "xor",  "a"          ],

0xb0 : [ 1, "or",  "b"           ],
0xb1 : [ 1, "or",  "c"           ],
0xb2 : [ 1, "or",  "d"           ],
0xb3 : [ 1, "or",  "e"           ],
0xb4 : [ 1, "or",  "h"           ],
0xb5 : [ 1, "or",  "l"           ],
0xb6 : [ 1, "or",  "indhl"       ],
0xb7 : [ 1, "or",  "a"           ],
0xb8 : [ 1, "cp",  "b"           ],
0xb9 : [ 1, "cp",  "c"           ],
0xba : [ 1, "cp",  "d"           ],
0xbb : [ 1, "cp",  "e"           ],
0xbc : [ 1, "cp",  "h"           ],
0xbd : [ 1, "cp",  "l"           ],
0xbe : [ 1, "cp",  "indhl"       ],
0xbf : [ 1, "cp",  "a"           ],

0xc0 : [ 1, "ret", "nz"          ], 
0xc1 : [ 1, "pop", "bc"          ], 
0xc2 : [ 3, "jp",  "nz,nn"       ], 
0xc3 : [ 3, "jp",  "nn"          ], 
0xc4 : [ 3, "call","nz,nn"       ], 
0xc5 : [ 1, "push","bc"          ], 
0xc6 : [ 2, "ada", "a,n"         ], 
0xc7 : [ 1, "rst", "00"          ], 
0xc8 : [ 1, "ret", "z"           ], 
0xc9 : [ 1, "ret", "implied"     ], 
0xca : [ 3, "jp",  "z,nn"        ], 
0xcc : [ 3, "call","z,nn"        ], 
0xcd : [ 3, "call", "nn"         ], 
0xce : [ 2, "adc",  "a,n"        ], 
0xcf : [ 1, "rst",  "08"         ], 

0xd0 : [ 1, "ret",  "nc"         ], 
0xd1 : [ 1, "pop",  "de"         ], 
0xd2 : [ 3, "jp",   "nc,nn"      ], 
0xd3 : [ 2, "out",  "indn,a"     ],
0xd4 : [ 3, "call", "nc,nn"      ], 
0xd5 : [ 1, "push", "de"         ], 
0xd6 : [ 2, "sub",  "n"          ], 
0xd7 : [ 1, "rst",  "10"         ], 
0xd8 : [ 1, "ret",  "c"          ], 
0xd9 : [ 1, "exx",  "implied"    ], 
0xda : [ 3, "jp",   "c,nn"       ], 
0xdb : [ 2, "in",   "a,indn"     ],
0xdc : [ 3, "call", "c,nn"       ], 
0xde : [ 2, "sbc",  "a,n"        ], 
0xdf : [ 1, "rst",  "18"         ], 

0xe0 : [ 1, "ret",  "po"         ], 
0xe1 : [ 1, "pop",  "hl"         ], 
0xe2 : [ 3, "jp",   "po,nn"      ], 
0xe3 : [ 1, "ex",   "indsp,hl"   ], 
0xe4 : [ 3, "call", "po,nn"      ], 
0xe5 : [ 1, "push", "hl"         ], 
0xe6 : [ 2, "and",  "n"          ], 
0xe7 : [ 1, "rst",  "20"         ], 
0xe8 : [ 1, "ret",  "pe"         ], 
0xe9 : [ 1, "jp",   "indhl"      ], 
0xea : [ 3, "jp",   "pe,nn"      ], 
0xeb : [ 1, "ex",   "de,hl"      ], 
0xec : [ 3, "call", "pe,nn"      ], 
0xee : [ 2, "xor",  "n"          ], 
0xef : [ 1, "rst",  "28"         ], 

0xf0 : [ 1, "ret",  "p"          ], 
0xf1 : [ 1, "pop",  "af"         ], 
0xf2 : [ 3, "jp",   "p,nn"       ], 
0xf3 : [ 1, "di",   "implied"    ], 
0xf4 : [ 3, "call", "p,nn"       ], 
0xf5 : [ 1, "push", "af"         ], 
0xf6 : [ 2, "or",   "n"          ], 
0xf7 : [ 1, "rst",  "30"         ], 
0xf8 : [ 1, "ret",  "m"          ], 
0xf9 : [ 1, "ld",   "sp,hl"      ], 
0xfa : [ 3, "jp",   "m,nn"       ], 
0xfb : [ 1, "ei",   "implied"    ], 
0xfc : [ 3, "call", "m,nn"       ], 
0xfe : [ 2, "cp",   "n"          ], 
0xff : [ 1, "rst",  "38"         ], 

# Multibyte instructions

0xcb00 : [ 2, "rlc",  "b"        ],
0xcb01 : [ 2, "rlc",  "c"        ],
0xcb02 : [ 2, "rlc",  "d"        ],
0xcb03 : [ 2, "rlc",  "e"        ],
0xcb04 : [ 2, "rlc",  "h"        ],
0xcb05 : [ 2, "rlc",  "l"        ],
0xcb06 : [ 2, "rlc",  "indhl"    ],
0xcb07 : [ 2, "rlc",  "a"        ],
0xcb08 : [ 2, "rrc",  "b"        ],
0xcb09 : [ 2, "rrc",  "c"        ],
0xcb0a : [ 2, "rrc",  "d"        ],
0xcb0b : [ 2, "rrc",  "e"        ],
0xcb0c : [ 2, "rrc",  "h"        ],
0xcb0d : [ 2, "rrc",  "l"        ],
0xcb0e : [ 2, "rrc",  "indhl"    ],
0xcb0f : [ 2, "rrc",  "a"        ],

0xcb10 : [ 2, "rl",   "b"        ],
0xcb11 : [ 2, "rl",   "c"        ],
0xcb12 : [ 2, "rl",   "d"        ],
0xcb13 : [ 2, "rl",   "e"        ],
0xcb14 : [ 2, "rl",   "h"        ],
0xcb15 : [ 2, "rl",   "l"        ],
0xcb16 : [ 2, "rl",   "indhl"    ],
0xcb17 : [ 2, "rl",   "a"        ],
0xcb18 : [ 2, "rr",   "b"        ],
0xcb19 : [ 2, "rr",   "c"        ],
0xcb1a : [ 2, "rr",   "d"        ],
0xcb1b : [ 2, "rr",   "e"        ],
0xcb1c : [ 2, "rr",   "h"        ],
0xcb1d : [ 2, "rr",   "l"        ],
0xcb1e : [ 2, "rr",   "indhl"    ],
0xcb1f : [ 2, "rr",   "a"        ],

0xcb20 : [ 2, "sla",  "b"        ],
0xcb21 : [ 2, "sla",  "c"        ],
0xcb22 : [ 2, "sla",  "d"        ],
0xcb23 : [ 2, "sla",  "e"        ],
0xcb24 : [ 2, "sla",  "h"        ],
0xcb25 : [ 2, "sla",  "l"        ],
0xcb26 : [ 2, "sla",  "indhl"    ],
0xcb27 : [ 2, "sla",  "a"        ],
0xcb28 : [ 2, "sra",  "b"        ],
0xcb29 : [ 2, "sra",  "c"        ],
0xcb2a : [ 2, "sra",  "d"        ],
0xcb2b : [ 2, "sra",  "e"        ],
0xcb2c : [ 2, "sra",  "h"        ],
0xcb2d : [ 2, "sra",  "l"        ],
0xcb2e : [ 2, "sra",  "indhl"    ],
0xcb2f : [ 2, "sra",  "a"        ],

0xcb38 : [ 2, "srl",  "b"        ],
0xcb39 : [ 2, "srl",  "c"        ],
0xcb3a : [ 2, "srl",  "d"        ],
0xcb3b : [ 2, "srl",  "e"        ],
0xcb3c : [ 2, "srl",  "h"        ],
0xcb3d : [ 2, "srl",  "l"        ],
0xcb3e : [ 2, "srl",  "indhl"    ],
0xcb3f : [ 2, "srl",  "a"        ],

0xcb40 : [ 2, "bit",  "0,b"      ],
0xcb41 : [ 2, "bit",  "0,c"      ],
0xcb42 : [ 2, "bit",  "0,d"      ],
# etc.
0xcbff : [ 2, "set",  "7,a"      ],

0xdd09 : [ 2, "add",  "ix,bc"    ],

0xfd09 : [ 2, "add",  "iy,bc"    ],

0xed40 : [ 2, "in",  "b,indc"    ],

}

# End of processor specific code
##########################################################################
